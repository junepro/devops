image: node

stages:
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths: 
    - node_modules/
  polilcy: pull

variables:
  STAGING_DOMAIN: instazone-staging.surge.sh
  PROUDCTION_DOMAIN : instazone.surge.sh

update cache:
  stage: cache
  script:
    - npm install
  cache:
      key: ${CI_COMMIT_REF_SLUG}
      paths:
        - node_modules/
      policy: push
  only:
    - schedules  

build website:
 stages: build
 only:
   - master
   - merge_requests 
 script:
   - echo $CI_COMMIT_SHORT_SHA
   - npm install
   - npm install -g gatsby-cli
   - gatsby build
   - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA" ./public/index.html
 artifacts:
   paths:
    - ./public
 except:
 - schedules   

test artifact:
  image: alpine
  stage: test
  only:
    - master
    - merge_requests  
  script:
    - grep -q "Gatsby" ./public/index.html
  except:
  - schedules      

test website:
  stage: test
  only:
    - master
    - merge_requests
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 3
    - curl "http://localhost:9000" | grep -q "Gatsby"
  except:
  - schedules      

deploy review:
  stage: deploy review
  only:
    - merge_requests
  environment:
      name: review/$CI_COMMIT_REF_NAME
      url: https://instazone-$CI_ENVIRONMENT_SLUG.surge.sh
      on_stop: stop review
  script:
    - npm install --global surge
    - surge --project ./public --domain instazone-$CI_ENVIRONMENT_SLUG.surge.sh

stop review:
  stage: deploy review
  only:
    - merge_requests
  variables:
    GIT_STRATEGY: none
  script:
    - npm install --global surge
    - surge teardown instazone-$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

.deploy_template: &deploy
  only:
    - master  
  script:
    - npm install --global surge
    - surge --project ./public --domain $DOMAIN


deploy staging: 
  <<: *deploy
  stage: deploy staging
  variables:
    DOMAIN: $STAGING_DOMAIN
  environment:
    name: staging
    url: http://$DOMAIN
  # only:
  #   - master  
  # script:
  #   - npm install --global surge
  #   - surge --project ./public --domain $STAGING_DOMAIN

deploy production: 
  <<: *deploy
  stage: deploy production
  variables:
    DOMAIN: $PRODUCTION_DOMAIN
  environment:
    name: production
    url: $$DOMAIN
  # only:
  #   - master    
  # before_script:
  #   - echo "Deploying to production"
  # script:
  #   - npm install --global surge
  #   - surge --project ./public --domain $PRODUCTION_DOMAIN

production tests:
  image: alpine
  stage: production tests
  only:
    - master  
  script:
    - apk add --no-cache curl
    - curl -s "https://$PRODUCTION_DOMAIN" | grep -q "Hi people"
    - curl -s "https://$PRODUCTION_DOMAIN" | grep -q "$CI_COMMIT_SHORT_SHA"